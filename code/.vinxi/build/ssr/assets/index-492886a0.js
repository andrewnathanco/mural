import{isServer as C,createComponent as T,spread as m,useAssets as x,ssr as N,escape as h}from"solid-js/web";import{createContext as $,createUniqueId as g,useContext as O,createRenderEffect as b,onCleanup as P,sharedConfig as j}from"solid-js";const v=$(),y=["title","meta"],p=[],f=["name","http-equiv","content","charset","media"].concat(["property"]),l=(n,t)=>{const e=Object.fromEntries(Object.entries(n.props).filter(([r])=>t.includes(r)).sort());return(Object.hasOwn(e,"name")||Object.hasOwn(e,"property"))&&(e.name=e.name||e.property,delete e.property),n.tag+JSON.stringify(e)};function E(){if(!j.context){const e=document.head.querySelectorAll("[data-sm]");Array.prototype.forEach.call(e,r=>r.parentNode.removeChild(r))}const n=new Map;function t(e){if(e.ref)return e.ref;let r=document.querySelector(`[data-sm="${e.id}"]`);return r?(r.tagName.toLowerCase()!==e.tag&&(r.parentNode&&r.parentNode.removeChild(r),r=document.createElement(e.tag)),r.removeAttribute("data-sm")):r=document.createElement(e.tag),r}return{addTag(e){if(y.indexOf(e.tag)!==-1){const i=e.tag==="title"?p:f,a=l(e,i);n.has(a)||n.set(a,[]);let s=n.get(a),u=s.length;s=[...s,e],n.set(a,s);let d=t(e);e.ref=d,m(d,e.props);let c=null;for(var r=u-1;r>=0;r--)if(s[r]!=null){c=s[r];break}return d.parentNode!=document.head&&document.head.appendChild(d),c&&c.ref&&document.head.removeChild(c.ref),u}let o=t(e);return e.ref=o,m(o,e.props),o.parentNode!=document.head&&document.head.appendChild(o),-1},removeTag(e,r){const o=e.tag==="title"?p:f,i=l(e,o);if(e.ref){const a=n.get(i);if(a){if(e.ref.parentNode){e.ref.parentNode.removeChild(e.ref);for(let s=r-1;s>=0;s--)a[s]!=null&&document.head.appendChild(a[s].ref)}a[r]=null,n.set(i,a)}else e.ref.parentNode&&e.ref.parentNode.removeChild(e.ref)}}}}function M(){const n=[];return x(()=>N(q(n))),{addTag(t){if(y.indexOf(t.tag)!==-1){const e=t.tag==="title"?p:f,r=l(t,e),o=n.findIndex(i=>i.tag===t.tag&&l(i,e)===r);o!==-1&&n.splice(o,1)}return n.push(t),n.length},removeTag(t,e){}}}const I=n=>{const t=C?M():E();return T(v.Provider,{value:t,get children(){return n.children}})},w=(n,t,e)=>(S({tag:n,props:t,setting:e,id:g(),get name(){return t.name||t.property}}),null);function S(n){const t=O(v);if(!t)throw new Error("<MetaProvider /> should be in the tree");b(()=>{const e=t.addTag(n);P(()=>t.removeTag(n,e))})}function q(n){return n.map(t=>{const r=Object.keys(t.props).map(i=>i==="children"?"":` ${i}="${h(t.props[i],!0)}"`).join(""),o=t.props.children;return t.setting?.close?`<${t.tag} data-sm="${t.id}"${r}>${t.setting?.escape?h(o):o||""}</${t.tag}>`:`<${t.tag} data-sm="${t.id}"${r}/>`}).join("")}const k=n=>w("meta",n);export{I as M,k as a};
